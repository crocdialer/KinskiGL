#include "Colormap.h"

const double Colormap::ms_jetValues[]=
{
	0,		   0,    0.5625,
	0,         0,    0.6250,
	0,         0,    0.6875,
	0,         0,    0.7500,
	0,         0,    0.8125,
	0,         0,    0.8750,
	0,         0,    0.9375,
	0,         0,    1.0000,
	0,    0.0625,    1.0000,
	0,    0.1250,    1.0000,
	0,    0.1875,    1.0000,
	0,    0.2500,    1.0000,
	0,    0.3125,    1.0000,
	0,    0.3750,    1.0000,
	0,    0.4375,    1.0000,
	0,    0.5000,    1.0000,
	0,    0.5625,    1.0000,
	0 ,   0.6250,    1.0000,
	0 ,   0.6875,    1.0000,
	0 ,   0.7500,    1.0000,
	0,    0.8125,    1.0000,
	0,    0.8750,    1.0000,
	0,    0.9375,    1.0000,
	0,    1.0000,    1.0000,
	0.0625,    1.0000,    0.9375,
	0.1250,    1.0000,    0.8750,
	0.1875,    1.0000,    0.8125,
	0.2500,    1.0000,    0.7500,
	0.3125,    1.0000,    0.6875,
	0.3750,    1.0000 ,   0.6250,
	0.4375,    1.0000 ,   0.5625,
	0.5000,    1.0000,    0.5000,
	0.5625,    1.0000,    0.4375,
	0.6250,    1.0000 ,   0.3750,
	0.6875,    1.0000,    0.3125,
	0.7500,    1.0000 ,   0.2500,
	0.8125,    1.0000 ,   0.1875,
	0.8750,    1.0000 ,   0.1250,
	0.9375,    1.0000 ,   0.0625,
	1.0000,    1.0000 ,        0,
	1.0000,    0.9375 ,        0,
	1.0000,    0.8750 ,        0,
	1.0000,    0.8125 ,        0,
	1.0000,    0.7500 ,        0,
	1.0000,    0.6875 ,        0,
	1.0000,    0.6250 ,        0,
	1.0000,    0.5625 ,        0,
	1.0000,    0.5000 ,        0,
	1.0000,    0.4375 ,        0,
	1.0000,    0.3750 ,        0,
	1.0000,    0.3125 ,        0,
	1.0000,    0.2500 ,        0,
	1.0000,    0.1875 ,        0,
	1.0000,    0.1250 ,        0,
	1.0000,    0.0625 ,        0,
	1.0000,         0 ,        0,
	0.9375,         0 ,        0,
	0.8750,         0 ,        0,
	0.8125,         0 ,        0,
	0.7500,         0 ,        0,
	0.6875,         0 ,        0,
	0.6250,         0 ,        0,
	0.5625,         0 ,        0,
	0.5000,         0 ,        0
};

const double Colormap::ms_coolValues[]=
{
	0,		   1.0000,    1.0000,
    0.0159,    0.9841,    1.0000,
    0.0317,    0.9683,    1.0000,
    0.0476,    0.9524,   1.0000,
    0.0635,    0.9365,   1.0000,
    0.0794,    0.9206,   1.0000,
    0.0952,    0.9048,    1.0000,
    0.1111,    0.8889,    1.0000,
    0.1270,    0.8730,    1.0000,
    0.1429,    0.8571,   1.0000,
    0.1587,    0.8413,   1.0000,
    0.1746,    0.8254,    1.0000,
    0.1905,    0.8095,    1.0000,
    0.2063,    0.7937,    1.0000,
    0.2222,    0.7778,   1.0000,
    0.2381,    0.7619,   1.0000,
    0.2540,    0.7460,   1.0000,
    0.2698,    0.7302,   1.0000,
    0.2857,    0.7143,   1.0000,
    0.3016,    0.6984,   1.0000,
    0.3175,    0.6825,   1.0000,
    0.3333,    0.6667,   1.0000,
    0.3492,    0.6508,    1.0000,
    0.3651,    0.6349,    1.0000,
    0.3810,    0.6190,    1.0000,
    0.3968,    0.6032,    1.0000,
    0.4127,    0.5873,    1.0000,
    0.4286,    0.5714,    1.0000,
    0.4444,    0.5556,    1.0000,
    0.4603,    0.5397,    1.0000,
    0.4762,    0.5238,    1.0000,
    0.4921,    0.5079,    1.0000,
    0.5079,    0.4921,    1.0000,
    0.5238,    0.4762,    1.0000,
    0.5397,    0.4603,    1.0000,
    0.5556,    0.4444,    1.0000,
    0.5714,    0.4286,    1.0000,
    0.5873,    0.4127,    1.0000,
    0.6032,    0.3968,    1.0000,
    0.6190,    0.3810,    1.0000,
    0.6349,    0.3651,    1.0000,
    0.6508,    0.3492,    1.0000,
    0.6667,    0.3333,    1.0000,
    0.6825,    0.3175,    1.0000,
    0.6984,    0.3016,    1.0000,
    0.7143,    0.2857,    1.0000,
    0.7302,    0.2698,    1.0000,
    0.7460,    0.2540,    1.0000,
    0.7619,    0.2381,    1.0000,
    0.7778,    0.2222,    1.0000,
    0.7937,    0.2063,    1.0000,
    0.8095,    0.1905,    1.0000,
    0.8254,    0.1746,    1.0000,
    0.8413,    0.1587,    1.0000,
    0.8571,    0.1429,    1.0000,
    0.8730,    0.1270,    1.0000,
    0.8889,    0.1111,    1.0000,
    0.9048,    0.0952,    1.0000,
    0.9206,    0.0794,    1.0000,
    0.9365,    0.0635,    1.0000,
    0.9524,    0.0476,    1.0000,
    0.9683,    0.0317,    1.0000,
    0.9841,    0.0159,    1.0000,
    1.0000,         0,    1.0000
};

const double Colormap::ms_boneValues[]=
{
	0,         0,		  0.0052,
    0.0139,    0.0139,    0.0243,
    0.0278,    0.0278,    0.0434,
    0.0417,    0.0417,    0.0625,
    0.0556,    0.0556,    0.0816,
    0.0694,    0.0694,    0.1007,
    0.0833,    0.0833,    0.1198,
    0.0972,    0.0972,    0.1389,
    0.1111,    0.1111,    0.1580,
    0.1250,    0.1250,    0.1771,
    0.1389,    0.1389,    0.1962,
    0.1528,    0.1528,    0.2153,
    0.1667,    0.1667,    0.2344,
    0.1806,    0.1806,    0.2535,
    0.1944,    0.1944,    0.2726,
    0.2083,    0.2083,    0.2917,
    0.2222,    0.2222,    0.3108,
    0.2361,    0.2361,    0.3299,
    0.2500,    0.2500,    0.3490,
    0.2639,    0.2639,    0.3681,
    0.2778,    0.2778,    0.3872,
    0.2917,    0.2917 ,   0.4062,
    0.3056,    0.3056,    0.4253,
    0.3194,    0.3194,    0.4444,
    0.3333,    0.3385,    0.4583,
    0.3472,    0.3576,    0.4722,
    0.3611,    0.3767,    0.4861,
    0.3750,    0.3958,    0.5000,
    0.3889,    0.4149,    0.5139,
    0.4028,    0.4340,    0.5278,
    0.4167,    0.4531,    0.5417,
    0.4306,    0.4722,    0.5556,
    0.4444,    0.4913,    0.5694,
    0.4583,    0.5104,    0.5833,
    0.4722,    0.5295 ,   0.5972,
    0.4861,    0.5486,    0.6111,
    0.5000,    0.5677,    0.6250,
    0.5139 ,   0.5868,    0.6389,
    0.5278,    0.6059,    0.6528,
    0.5417,    0.6250,    0.6667,
    0.5556,    0.6441,    0.6806,
    0.5694,    0.6632,    0.6944,
    0.5833,    0.6823,    0.7083,
    0.5972,    0.7014,    0.7222,
    0.6111,    0.7205,    0.7361,
    0.6250,    0.7396,    0.7500,
    0.6389,    0.7587,    0.7639,
    0.6528,    0.7778,    0.7778,
    0.6745,    0.7917,    0.7917,
    0.6962,    0.8056,    0.8056,
    0.7179,    0.8194,    0.8194,
    0.7396,    0.8333,    0.8333,
    0.7613,    0.8472,    0.8472,
    0.7830,    0.8611,    0.8611,
    0.8047,    0.8750,    0.8750,
    0.8264,    0.8889,    0.8889,
    0.8481,    0.9028,    0.9028,
    0.8698,    0.9167 ,   0.9167,
    0.8915,    0.9306,    0.9306,
    0.9132,    0.9444,    0.9444,
    0.9349,    0.9583,    0.9583,
    0.9566,    0.9722,    0.9722,
    0.9783,    0.9861,    0.9861,
    1.0000,    1.0000,    1.0000
};

const double Colormap::ms_autumnValues[]=
{
	1.0000,         0,         0,
    1.0000,    0.0159,         0,
    1.0000,    0.0317,         0,
    1.0000,    0.0476,        0,
    1.0000,    0.0635,         0,
    1.0000,    0.0794,         0,
    1.0000,    0.0952,        0,
    1.0000,    0.1111,         0,
    1.0000,    0.1270,         0,
    1.0000,    0.1429,         0,
    1.0000,    0.1587,         0,
    1.0000,    0.1746,         0,
    1.0000,    0.1905,         0,
    1.0000,    0.2063,         0,
    1.0000,    0.2222,         0,
    1.0000,    0.2381,         0,
    1.0000,    0.2540,         0,
    1.0000,    0.2698,         0,
    1.0000,    0.2857,         0,
    1.0000,    0.3016,         0,
    1.0000,    0.3175,         0,
    1.0000,    0.3333,         0,
    1.0000,    0.3492,         0,
    1.0000,    0.3651,         0,
    1.0000,    0.3810,        0,
    1.0000,    0.3968,         0,
    1.0000,    0.4127,         0,
    1.0000,    0.4286,         0,
    1.0000,    0.4444,         0,
    1.0000,    0.4603,         0,
    1.0000,    0.4762,         0,
    1.0000,    0.4921,         0,
    1.0000,    0.5079,         0,
    1.0000,    0.5238,         0,
    1.0000,    0.5397,        0,
    1.0000,    0.5556,        0,
    1.0000,    0.5714,         0,
    1.0000,    0.5873,         0,
    1.0000,    0.6032,         0,
    1.0000,    0.6190,        0,
    1.0000,    0.6349,        0,
    1.0000,    0.6508,        0,
    1.0000,    0.6667,        0,
    1.0000,    0.6825,        0,
    1.0000,    0.6984,         0,
    1.0000,    0.7143,         0,
    1.0000,    0.7302,         0,
    1.0000,    0.7460,         0,
    1.0000,    0.7619,         0,
    1.0000,    0.7778,         0,
    1.0000,    0.7937,         0,
    1.0000,    0.8095,        0,
    1.0000,    0.8254,         0,
    1.0000,    0.8413,         0,
    1.0000,    0.8571,         0,
    1.0000,    0.8730,         0,
    1.0000,    0.8889,         0,
    1.0000,    0.9048,         0,
    1.0000,    0.9206,         0,
    1.0000,    0.9365,         0,
    1.0000,    0.9524,         0,
    1.0000,    0.9683,         0,
    1.0000,    0.9841,         0,
    1.0000,    1.0000,         0
};

using namespace cv;

Colormap::Colormap(const ColorMapType& mt)
{
	const double* colorMap;
	switch (mt) 
	{
		case JET:
			colorMap = ms_jetValues;
			break;
			
		case COOL:
			colorMap = ms_coolValues;
			break;
			
		case BONE:
			colorMap = ms_boneValues;
			break;
		
		case AUTUMN:
			colorMap = ms_autumnValues;
			break;
			
		default:
			colorMap=NULL;
			break;
	}
	
	for (int i=0; i< 64; i++) 
	{
        Vec3f low = Vec3f(floor(colorMap[3*i+2]*255 + 0.5),
                          floor(colorMap[3*i+1]*255 + 0.5),
                          floor(colorMap[3*i]*255 + 0.5));
        
        Vec3f diff(Vec3f::all(0.f));
        if(i<63)
            diff = (Vec3f(floor(colorMap[3*i+2]*255 + 0.5),
                          floor(colorMap[3*i+1]*255 + 0.5),
                          floor(colorMap[3*i]*255 + 0.5))
            - low) * .25f;
        
		for (int j=0; j<4; j++) 
		{
			//switch RGB -> BGR and build 256 value-combinedLUT
			m_byteValues[4*i+j] = Vec3b(low + j*diff);
		}
	}
	
	cv::Mat combinedLUT = cv::Mat_<Vec3b>(1,256,m_byteValues);
	cv::split(combinedLUT,m_lookUpTables);
	
	//B
	m_bgrChannels.push_back(cv::Mat());
	//G
	m_bgrChannels.push_back(cv::Mat());
	//R
	m_bgrChannels.push_back(cv::Mat());
}

cv::Mat Colormap::apply (const cv::Mat& img1C) const
{
	// we want a 1 channel 8bit mat (gray image)
	//assert(img1C.channels() == 1 && img1C.type() == CV_8UC1);
	
	Mat out;
    
    // init copy
    vector<Mat> bgrVec = m_bgrChannels;
    
	// do lookup for each channel separately
	for (int c=0; c<3; c++) 
		cv::LUT(img1C,m_lookUpTables[c],bgrVec[c]);

	// merge channels together to final image
	cv::merge(bgrVec,out);
	
	return out;
	
}