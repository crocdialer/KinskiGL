//
//  EmptySample.cpp
//  kinskiGL
//
//  Created by Fabian on 29/01/14.
//
//

#include "EmptySample.h"

using namespace std;
using namespace kinski;
using namespace glm;


/////////////////////////////////////////////////////////////////

void EmptySample::setup()
{
    
}

/////////////////////////////////////////////////////////////////

void EmptySample::update(float timeDelta)
{
    
}

/////////////////////////////////////////////////////////////////

void EmptySample::draw()
{
    
}

/////////////////////////////////////////////////////////////////

void EmptySample::resize(int w ,int h)
{
    
}

/////////////////////////////////////////////////////////////////

void EmptySample::keyPress(const KeyEvent &e)
{
    
}

/////////////////////////////////////////////////////////////////

void EmptySample::keyRelease(const KeyEvent &e)
{
    
}

/////////////////////////////////////////////////////////////////

void EmptySample::mousePress(const MouseEvent &e)
{
    
}

/////////////////////////////////////////////////////////////////

void EmptySample::mouseRelease(const MouseEvent &e)
{
    
}

/////////////////////////////////////////////////////////////////

void EmptySample::mouseMove(const MouseEvent &e)
{
    
}

/////////////////////////////////////////////////////////////////

void EmptySample::mouseDrag(const MouseEvent &e)
{
    
}

/////////////////////////////////////////////////////////////////

void EmptySample::mouseWheel(const MouseEvent &e)
{
    
}

/////////////////////////////////////////////////////////////////

void EmptySample::got_message(const std::string &the_message)
{
    LOG_INFO<<the_message;
}

/////////////////////////////////////////////////////////////////

void EmptySample::tearDown()
{
    LOG_PRINT<<"ciao empty sample";
}

/////////////////////////////////////////////////////////////////

void EmptySample::updateProperty(const Property::ConstPtr &theProperty)
{
    
}
